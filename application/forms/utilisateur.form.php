<?php
/**
 * Created by PhpStorm.
 * User: wangy
 * Date: 26/12/2016
 * Time: 01:57
 */
namespace Sistr;

use F3il\Form;
use F3il\Field;

defined('SISTR') or die('Acces interdit');

class UtilisateurForm extends Form
{

    public function __construct($action)
    {
        parent::__construct($action, 'utilisateur-creer');
//        $this->addFormField(new \F3il\Field('id', 'Id', 0, true));
        $this->addFormField(new \F3il\Field('nom', 'Nom', null, true));
        $this->addFormField(new \F3il\Field('prenom', 'Prenom', null, true));
        $this->addFormField(new \F3il\Field('email', 'Email', null, true));
        $this->addFormField(new \F3il\Field('login', 'Login', null, true));
        $this->addFormField(new \F3il\Field('motdepasse', 'Motdepasse', null, false));
        $this->addFormField(new \F3il\Field('confirmation', 'Confirmation', null, false));
    }

    public function nomFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function prenomFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function emailFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function loginFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function motdepasseFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function confirmationFilter($value)
    {
        return filter_var($value, FILTER_SANITIZE_STRING);
    }

    public function mailValidator($mail)
    {
        if (filter_var($mail, FILTER_VALIDATE_EMAIL)) {
            return true;
        } else {
            $this->addMessage('email', "mail n'est pas etre formulaire");
            return false;
        }
    }

    public function loginValidator($login)
    {
        $mode = new UtilisateursModel();
        $id=0;
        if(array_key_exists("id",$_POST)){
            $id=$_POST["id"];
        }
        if ($mode->loginExistant($login,$id)) {
            if (!strpos($login, " ")) {
                if (strlen($login) >= 6) {
                    return true;
                } else {
                    $this->addMessage('login', "Login doit Longueur >=6");
                }

            } else {
                $this->addMessage('login', "Login ne doit pas contenir d'espaces");
            }
        } else {
            $this->addMessage('login', "Login a ete existant.");
        }

        return false;
    }

    public function motdepasseValidator($motdepasse)
    {
        if (strlen($motdepasse) >= 4) {
            return true;
        } else {
            $this->addMessage('motdepasse', "Motdepasse doit Longueur >=4");
            return false;
        }
    }

    public function confirmationValidator($confirmation)
    {
        if(array_key_exists("motdepasse",$_POST)){
            $motdepasse=$_POST["motdepasse"];
        }
        else{
            $motdepasse=null;
        }

        if ( $motdepasse === $confirmation) {
            return true;
        } else {
            $this->addMessage('confirmation', "Confirmation doit meme que MotDePasse.");
            return false;
        }
    }

    public function messageRenderer($message)
    {
        ?>
        <p class="text-danger text-right"><?php echo $message; ?></p>
        <?php
    }

    public function missingFieldMessageRenderer($field)
    {
//        return parent::missingFieldMessageRenderer($field); // TODO: Change the autogenerated stub
        $label = strtolower($field->label);
        return "Veuillez remplir le champ $label.";
    }
}